<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="4" failed="2" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[This is the sample screenshot]]>
    </line>
    <line>
      <![CDATA[<a href='/Users/vishnu/eclipse-workspace/TDDFramework/Screenshots/Android_motorola one/2021-12-31-14-43-55/LoginTests/invalidUserName.png'> <img src='/Users/vishnu/eclipse-workspace/TDDFramework/Screenshots/Android_motorola one/2021-12-31-14-43-55/LoginTests/invalidUserName.png' height='400' width='400'/> </a>]]>
    </line>
    <line>
      <![CDATA[This is the sample screenshot]]>
    </line>
    <line>
      <![CDATA[<a href='/Users/vishnu/eclipse-workspace/TDDFramework/Screenshots/iOS_iPhone 13/2021-12-31-14-43-55/LoginTests/invalidUserName.png'> <img src='/Users/vishnu/eclipse-workspace/TDDFramework/Screenshots/iOS_iPhone 13/2021-12-31-14-43-55/LoginTests/invalidUserName.png' height='400' width='400'/> </a>]]>
    </line>
  </reporter-output>
  <suite started-at="2021-12-31T14:43:55 IST" name="Suite" finished-at="2021-12-31T14:46:12 IST" duration-ms="136783">
    <groups>
    </groups>
    <test started-at="2021-12-31T14:43:55 IST" name="Android" finished-at="2021-12-31T14:44:44 IST" duration-ms="48785">
      <class name="com.qa.tests.LoginTests">
        <test-method is-config="true" signature="beforeTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:43:55 IST" name="beforeTest" finished-at="2021-12-31T14:44:13 IST" duration-ms="17403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ZF6224FRBT]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[motorola one]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10005]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[11005]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[iOSOnly]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[iOSOnly]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:44:13 IST" name="beforeClass" finished-at="2021-12-31T14:44:14 IST" duration-ms="1395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:44:14 IST" name="beforeMethod" finished-at="2021-12-31T14:44:15 IST" duration-ms="788" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:44:15 IST" name="beforeMethod" finished-at="2021-12-31T14:44:15 IST" duration-ms="46" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidPassword() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidPassword()[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:44:15 IST" name="invalidPassword" finished-at="2021-12-31T14:44:23 IST" duration-ms="8045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:44:23 IST" name="afterMethod" finished-at="2021-12-31T14:44:23 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:44:23 IST" name="afterMethod" finished-at="2021-12-31T14:44:24 IST" duration-ms="1285" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidPassword status=SUCCESS method=LoginTests.invalidPassword()[pri:0, instance:com.qa.tests.LoginTests@7d8995e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:44:24 IST" name="beforeMethod" finished-at="2021-12-31T14:44:25 IST" duration-ms="754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:44:25 IST" name="beforeMethod" finished-at="2021-12-31T14:44:25 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidUserName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidUserName()[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:44:25 IST" name="invalidUserName" finished-at="2021-12-31T14:44:32 IST" duration-ms="7003" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Username and password do not match any user in this service.] but found [Username and password do not match any user in this service.__test]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Username and password do not match any user in this service.] but found [Username and password do not match any user in this service.__test]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.qa.tests.LoginTests.invalidUserName(LoginTests.java:87)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[This is the sample screenshot]]>
            </line>
            <line>
              <![CDATA[<a href='/Users/vishnu/eclipse-workspace/TDDFramework/Screenshots/Android_motorola one/2021-12-31-14-43-55/LoginTests/invalidUserName.png'> <img src='/Users/vishnu/eclipse-workspace/TDDFramework/Screenshots/Android_motorola one/2021-12-31-14-43-55/LoginTests/invalidUserName.png' height='400' width='400'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidUserName -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:44:33 IST" name="afterMethod" finished-at="2021-12-31T14:44:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:44:33 IST" name="afterMethod" finished-at="2021-12-31T14:44:34 IST" duration-ms="1315" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidUserName status=FAILURE method=LoginTests.invalidUserName()[pri:0, instance:com.qa.tests.LoginTests@7d8995e] output=This is the sample screenshot]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:44:34 IST" name="beforeMethod" finished-at="2021-12-31T14:44:35 IST" duration-ms="776" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:44:35 IST" name="beforeMethod" finished-at="2021-12-31T14:44:35 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.successfulLogin() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="successfulLogin()[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:44:35 IST" name="successfulLogin" finished-at="2021-12-31T14:44:42 IST" duration-ms="6853" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:44:42 IST" name="afterMethod" finished-at="2021-12-31T14:44:42 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:44:42 IST" name="afterMethod" finished-at="2021-12-31T14:44:44 IST" duration-ms="1774" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=successfulLogin status=SUCCESS method=LoginTests.successfulLogin()[pri:0, instance:com.qa.tests.LoginTests@7d8995e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:44:44 IST" name="afterClass" finished-at="2021-12-31T14:44:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.qa.tests.LoginTests@7d8995e]" started-at="2021-12-31T14:44:44 IST" name="afterTest" finished-at="2021-12-31T14:44:44 IST" duration-ms="416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.qa.tests.LoginTests -->
    </test> <!-- Android -->
    <test started-at="2021-12-31T14:43:55 IST" name="iOS" finished-at="2021-12-31T14:46:12 IST" duration-ms="136783">
      <class name="com.qa.tests.LoginTests">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:43:46 IST" name="beforeSuite" finished-at="2021-12-31T14:43:55 IST" duration-ms="8841" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:43:55 IST" name="beforeTest" finished-at="2021-12-31T14:44:04 IST" duration-ms="8363" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[androidOnly]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[F312EA3A-C169-4390-BA6A-C56E36DEDD76]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[iPhone 13]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[androidOnly]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[androidOnly]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[10001]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[11001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:44:04 IST" name="beforeClass" finished-at="2021-12-31T14:44:11 IST" duration-ms="7374" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:44:11 IST" name="beforeMethod" finished-at="2021-12-31T14:44:12 IST" duration-ms="1253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:44:12 IST" name="beforeMethod" finished-at="2021-12-31T14:44:13 IST" duration-ms="510" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidPassword() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidPassword()[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:44:13 IST" name="invalidPassword" finished-at="2021-12-31T14:44:40 IST" duration-ms="27541" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:44:40 IST" name="afterMethod" finished-at="2021-12-31T14:44:40 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:44:40 IST" name="afterMethod" finished-at="2021-12-31T14:44:44 IST" duration-ms="3368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidPassword status=SUCCESS method=LoginTests.invalidPassword()[pri:0, instance:com.qa.tests.LoginTests@51399530] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:44:44 IST" name="beforeMethod" finished-at="2021-12-31T14:44:44 IST" duration-ms="654" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:44:44 IST" name="beforeMethod" finished-at="2021-12-31T14:44:44 IST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidUserName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidUserName()[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:44:44 IST" name="invalidUserName" finished-at="2021-12-31T14:45:23 IST" duration-ms="38492" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Username and password do not match any user in this service.] but found [Username and password do not match any user in this service.__test]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Username and password do not match any user in this service.] but found [Username and password do not match any user in this service.__test]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.qa.tests.LoginTests.invalidUserName(LoginTests.java:87)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[This is the sample screenshot]]>
            </line>
            <line>
              <![CDATA[<a href='/Users/vishnu/eclipse-workspace/TDDFramework/Screenshots/iOS_iPhone 13/2021-12-31-14-43-55/LoginTests/invalidUserName.png'> <img src='/Users/vishnu/eclipse-workspace/TDDFramework/Screenshots/iOS_iPhone 13/2021-12-31-14-43-55/LoginTests/invalidUserName.png' height='400' width='400'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidUserName -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:45:24 IST" name="afterMethod" finished-at="2021-12-31T14:45:24 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:45:24 IST" name="afterMethod" finished-at="2021-12-31T14:45:28 IST" duration-ms="4210" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidUserName status=FAILURE method=LoginTests.invalidUserName()[pri:0, instance:com.qa.tests.LoginTests@51399530] output=This is the sample screenshot]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:45:28 IST" name="beforeMethod" finished-at="2021-12-31T14:45:29 IST" duration-ms="673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:45:29 IST" name="beforeMethod" finished-at="2021-12-31T14:45:29 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.successfulLogin() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="successfulLogin()[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:45:29 IST" name="successfulLogin" finished-at="2021-12-31T14:46:07 IST" duration-ms="38637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:46:07 IST" name="afterMethod" finished-at="2021-12-31T14:46:07 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:46:07 IST" name="afterMethod" finished-at="2021-12-31T14:46:11 IST" duration-ms="3693" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=successfulLogin status=SUCCESS method=LoginTests.successfulLogin()[pri:0, instance:com.qa.tests.LoginTests@51399530] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:46:11 IST" name="afterTest" finished-at="2021-12-31T14:46:12 IST" duration-ms="1064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:46:11 IST" name="afterClass" finished-at="2021-12-31T14:46:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.qa.tests.LoginTests@51399530]" started-at="2021-12-31T14:46:17 IST" name="afterSuite" finished-at="2021-12-31T14:46:17 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.qa.tests.LoginTests -->
    </test> <!-- iOS -->
  </suite> <!-- Suite -->
</testng-results>
